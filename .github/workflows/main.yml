name: Build NGINX Brutal Module

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository to access the source files.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install required packages.
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget libpcre3-dev zlib1g-dev

      # 3. Prepare the module source directory.
      - name: Prepare module source
        run: |
          mkdir -p $HOME/nginx-brutal
          cp "$GITHUB_WORKSPACE/config" "$HOME/nginx-brutal/"
          cp "$GITHUB_WORKSPACE/ngx_http_tcp_brutal_module.c" "$HOME/nginx-brutal/"

      # 4. Download and extract the NGINX source code.
      - name: Download and extract NGINX source code
        run: |
          cd $HOME
          wget http://nginx.org/download/nginx-1.27.4.tar.gz
          tar -xf nginx-1.27.4.tar.gz

      # 5. Configure and compile the module.
      - name: Build the NGINX module
        run: |
          cd $HOME/nginx-1.27.4
          ./configure --with-compat --add-dynamic-module=$HOME/nginx-brutal --prefix=$HOME/nginx-1.27.4
          make modules && make

      # 6. Archive the entire NGINX compile directory.
      - name: Archive compiled directory
        run: |
          cd $HOME
          tar czf nginx-compiled.tar.gz nginx-1.27.4

      # 7. Debug: Print the directory structure of $HOME for verification.
      - name: Debug $HOME structure
        run: |
          echo "Listing contents of \$HOME:"
          ls -la $HOME
          echo "Recursively listing contents of \$HOME:"
          ls -laR $HOME

      # 8. Upload the compiled archive as an artifact.
      - name: Upload compiled directory artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-compiled.tar.gz
          path: /home/runner/nginx-compiled.tar.gz
