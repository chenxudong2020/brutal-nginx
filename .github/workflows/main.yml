name: Build NGINX Brutal Module

# This workflow is triggered manually via the "Run workflow" button.
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository so we can access the source files.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install required packages
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget libpcre3-dev zlib1g-dev tar

      # 3. Prepare the module source directory
      - name: Prepare module source
        run: |
          # Create a directory for the module (similar to ~/nginx-brutal in the instructions)
          mkdir -p $HOME/nginx-brutal
          # Copy the provided config file and module source file from the repo
          cp "$GITHUB_WORKSPACE/config" "$HOME/nginx-brutal/"
          cp "$GITHUB_WORKSPACE/ngx_http_tcp_brutal_module.c" "$HOME/nginx-brutal/"

      # 4. Download and extract the NGINX source code
      - name: Download and extract NGINX source code
        run: |
          cd $HOME
          wget http://nginx.org/download/nginx-1.18.0.tar.gz
          tar -xf nginx-1.18.0.tar.gz

      # 5. Configure and compile the module
      - name: Build the NGINX module
        run: |
          cd $HOME/nginx-1.18.0
          # Configure with the --with-compat flag and add our module directory
          ./configure --with-compat --add-dynamic-module=$HOME/nginx-brutal
          # Build only the modules (this will produce objs/ngx_http_tcp_brutal_module.so)
          make modules

      # 6. Upload the compiled module as an artifact for download
      - name: Upload compiled module artifact
        uses: actions/upload-artifact@v3
        with:
          name: ngx_http_tcp_brutal_module.so
          path: $HOME/nginx-1.18.0/objs/ngx_http_tcp_brutal_module.so
